version: '2.1'
networks:
  monitoring:
    driver: bridge
  mongo:
    name: mongo
  database:
    name: database
volumes:
    prometheus_data: {}
    grafana_data: {}
    postgres-db: {}
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090

    networks:
      - monitoring
  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - monitoring
  gateway:
    build:
      context: gateway
    ports:
      - 8000:8000
    expose:
      - 8000
    networks:
      - monitoring
  cache:
    build:
      context: cache
    ports:
      - 3001:3001
    expose:
      - 3001
    networks:
      - monitoring
  reco:
    build:
      context: reco
    ports:
      - 5001:5001
    expose:
      - 5001
    networks:
      - monitoring
      - database
      
  history:
    build:
      context: history
    ports:
      - 3030:3030
    expose:
      - 3030
    networks:
      - mongo
      - monitoring

  mongo:
    container_name: mongo
    image: mongo
    expose:
      - 27017
    volumes:
      - ./mongo_data:/data/db
    ports:
      - '27017:27017'
    networks:
      - mongo

  authentication:
    container_name: authentication
    build: ./authentication
    ports:
      - 8887:8887
    expose:
      - 8887
    env_file:
      - ./authentication/.env
    networks:
      - monitoring

  db:
    image: postgres:13.4-alpine
    environment:
      POSTGRES_USER: anadvorac
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: user_db
      POSTGRES_PORT: 5432
    env_file:
      - ./authentication/.env/

    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
